<?xml version="1.0" encoding="UTF-8"?>
  <beans xmlns="http://www.springframework.org/schema/beans" 
  		xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
        xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop" 
  	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
 	   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
 	<!--  
 	 <context:annotation-config />
 	-->
  
    <!-- 扫描映射@Controller注解的处理类 -->  
    <context:component-scan base-package="com.zhku.community.action" />
    <context:component-scan base-package="com.zhku.base.action" /> 
    <!-- Controller层启动对@Aspect注解的支持,激活切面自动代理功能  --> 
	<aop:aspectj-autoproxy proxy-target-class="true" />
      
     <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <property name="messageConverters">
        <list>
            <bean
                class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="text" />
                            <constructor-arg index="1" value="plain" />
                            <constructor-arg index="2" value="UTF-8" />
                        </bean>
                    </list>
                </property>
            </bean>
        </list>
    </property>
	</bean>
	
	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 --> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> 
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 --> 
        <property name="maxUploadSize" value="5242880"/> 
    </bean>
	
	<!-- springmvc提供的简单异常处理器 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	     <!-- 定义默认的异常处理页面 -->
	    <!-- <property name="defaultErrorView" value="${pageContext.request.contextPath}/zhku/sys/error.jsp"/> -->
	    <!-- 定义异常处理页面用来获取异常信息的变量名，也可不定义，默认名为exception --> 
	    <property name="exceptionAttribute" value="ex"/>
	    <!-- 定义需要特殊处理的异常，这是重要点 --> 
	    <property name="exceptionMappings">
	        <props>
	            <prop key="com.zhku.base.exception.CustomException">${pageContext.request.contextPath}/zhku/sys/custom_error.jsp</prop>
	        </props>
	        <!-- 还可以定义其他的自定义异常 -->
	    </property>
	</bean>
	
	<mvc:interceptors>    
	    <mvc:interceptor>    
	        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
	        <mvc:mapping path="/" />  
	        <mvc:mapping path="/order/submitOrder.action" />  
	        <mvc:mapping path="/order/payOrder.action" />  
	        <mvc:mapping path="/order/myOrder.action" />  
	        <mvc:mapping path="/order/sureOrder.action" />  
	        <mvc:mapping path="/cart/**" />  
	        <bean class="com.zhku.base.interceptor.CommonInterceptor"></bean>    
	    </mvc:interceptor> 
	    <!-- <mvc:interceptor>
	    	<mvc:mapping path="/" /> 
	    	<mvc:mapping path="/user/**" /> 
	    	<mvc:mapping path="/category/**" /> 
	    	<mvc:mapping path="/categorySecond/**" /> 
	    	<mvc:mapping path="/order/**" /> 
	    	<mvc:mapping path="/product/**" /> 
	    	<mvc:mapping path="/section/**" /> 
	    	<mvc:mapping path="/post/**" /> 
	    	<mvc:mapping path="/zone/**" /> 
	    	<mvc:mapping path="/zhku/admin/user/**" /> 
	    	<mvc:mapping path="/zhku/admin/boot.jsp" /> 
	    	<bean class="com.zhku.base.interceptor.AdminInterceptor" />
	    </mvc:interceptor>  -->
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
	</mvc:interceptors> 
	
  	<mvc:annotation-driven/>
       <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->  
       <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"  
          p:prefix="/zhku" p:suffix=".jsp" />
        
       <!-- <bean id="multipartResolver"  
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver"  
          p:defaultEncoding="utf-8" />   -->
 </beans>